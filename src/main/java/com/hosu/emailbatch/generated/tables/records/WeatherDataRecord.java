/*
 * This file is generated by jOOQ.
 */
package com.hosu.emailbatch.generated.tables.records;


import com.hosu.emailbatch.generated.tables.WeatherData;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WeatherDataRecord extends UpdatableRecordImpl<WeatherDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.location</code>.
     */
    public void setLocation(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.location</code>.
     */
    public String getLocation() {
        return (String) get(1);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.date</code>.
     */
    public void setDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.temperature</code>.
     */
    public void setTemperature(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.temperature</code>.
     */
    public Double getTemperature() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.feels_like</code>.
     */
    public void setFeelsLike(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.feels_like</code>.
     */
    public Double getFeelsLike() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.humidity</code>.
     */
    public void setHumidity(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.humidity</code>.
     */
    public Integer getHumidity() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.wind_speed</code>.
     */
    public void setWindSpeed(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.wind_speed</code>.
     */
    public Double getWindSpeed() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.wind_direction</code>.
     */
    public void setWindDirection(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.wind_direction</code>.
     */
    public Integer getWindDirection() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.pressure</code>.
     */
    public void setPressure(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.pressure</code>.
     */
    public Double getPressure() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.weather_main</code>.
     */
    public void setWeatherMain(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.weather_main</code>.
     */
    public String getWeatherMain() {
        return (String) get(9);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.weather_description</code>.
     */
    public void setWeatherDescription(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.weather_description</code>.
     */
    public String getWeatherDescription() {
        return (String) get(10);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.icon</code>.
     */
    public void setIcon(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.icon</code>.
     */
    public String getIcon() {
        return (String) get(11);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>emailbatch.WEATHER_DATA.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>emailbatch.WEATHER_DATA.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WeatherDataRecord
     */
    public WeatherDataRecord() {
        super(WeatherData.WEATHER_DATA);
    }

    /**
     * Create a detached, initialised WeatherDataRecord
     */
    public WeatherDataRecord(Long id, String location, LocalDate date, Double temperature, Double feelsLike, Integer humidity, Double windSpeed, Integer windDirection, Double pressure, String weatherMain, String weatherDescription, String icon, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(WeatherData.WEATHER_DATA);

        setId(id);
        setLocation(location);
        setDate(date);
        setTemperature(temperature);
        setFeelsLike(feelsLike);
        setHumidity(humidity);
        setWindSpeed(windSpeed);
        setWindDirection(windDirection);
        setPressure(pressure);
        setWeatherMain(weatherMain);
        setWeatherDescription(weatherDescription);
        setIcon(icon);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
